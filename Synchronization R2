#include <SoftwareSerial.h>
#define RxD 2
#define TxD 3
#define LED 13
SoftwareSerial mySerial(RxD,TxD); // RX, TX
int val = 0; //value for storing moisture value 
int soilPin = A1;//Declare a variable for the soil moisture sensor 
int soilPower = 7;//Variable for Soil moisture Power
int DHpin = 12; // input/output pin
byte dat[5]; 
String SerialGET = "";
unsigned long previousMillis=0;
float interval=120000;

void setup() {
    Serial.begin(9600);
    pinMode(RxD, INPUT);
    pinMode(TxD, OUTPUT);
    pinMode(DHpin, OUTPUT);
    mySerial.begin(9600);
    pinMode(soilPower, OUTPUT);//Set D7 as an OUTPUT
    digitalWrite(soilPower, LOW);//Set to LOW so no power is flowing through the sensor
    digitalWrite(LED, LOW);
    pinMode(LED, OUTPUT);
    
}
 
void loop() {
  unsigned long currentMillis = millis();
  if((unsigned long)(currentMillis - previousMillis) >= interval){ 
              Serial.println("Turn OFF !!");
              digitalWrite(LED, LOW);
              previousMillis = currentMillis;}
    
     if(mySerial.available()) {                   //ฝั่งรับ    
        char incoming  = mySerial.read();
        SerialGET += incoming;
        if(incoming == '\n'){
          SerialGET.trim();   
          if(SerialGET.substring(0,1) == "1" && SerialGET.substring(1,2) == "2") {
            previousMillis = currentMillis;
            Serial.print("Get : ");
            Serial.println(SerialGET);
            if(SerialGET.substring(2,3) == "1"){}
            else if(SerialGET.substring(2,3) == "2"){
              Serial.println("Turn ON !!");
              digitalWrite(LED, HIGH);}
              else if(SerialGET.substring(2,3) == "0"){
              Serial.println("Turn OFF !!");
              digitalWrite(LED, LOW);}

              int soil = readSoil();
              soil = soil/10;
              Serial.print("Soil moisture = ");
              Serial.println(soil);
              String convert = String(soil);
              int count_convert = convert.length();
              
              /*int temp = Thermister(analogRead(0));
              Serial.print("Temperature = ");
              Serial.print(temp);
              Serial.println("c");
              String convert2 = String(temp);
              int count_convert2 = convert2.length();

              start_test();
              Serial.print("Humdity = ");
              Serial.print(dat[0]);
              Serial.println("%");
              String convert3 = String(dat[0]);
              int count_convert3 = convert3.length();*/
            delay(500);
            mySerial.print("21");
            mySerial.print(count_convert);
            mySerial.print(soil);
            /*mySerial.print(count_convert2);
            mySerial.print(temp);
            mySerial.print(count_convert3);
            mySerial.print(dat[0]);*/
            mySerial.print('\n');
            
            Serial.println("-----------------------");

            
            }else if(SerialGET.substring(0,1) == "1"){  
         
            if(SerialGET.substring(1,2) == "1") {}
              else{
                   SerialGET.setCharAt(0,'2');     // ส่งข้อมูลไปหา R อื่นๆ
                   delay(500);
                   mySerial.print(SerialGET);
                   mySerial.print('\n');
                   Serial.print("Forward : ");
                   Serial.println(SerialGET);
                   }    
            }
          if(SerialGET.substring(0,1) == "3"){   
            if(SerialGET.substring(1,2) == "1"){
              SerialGET.setCharAt(0,'2');     // ส่งข้อมูลไปหา C
              delay(500);
              mySerial.print(SerialGET);
              mySerial.print('\n');
              Serial.print("Backward : ");
              Serial.println(SerialGET);
              Serial.println("-----------------------");
              }
            }
     SerialGET = "";
        }
        }
}

int readSoil()
{
    digitalWrite(soilPower, HIGH);//turn D7 "On"
    delay(10);//wait 10 milliseconds 
    val = analogRead(soilPin);//Read the SIG value form sensor 
    digitalWrite(soilPower, LOW);//turn D7 "Off"
    return val;//send current moisture value
}
double Thermister(int RawADC) {
  double Temp;
  Temp = log(((10240000/RawADC) - 10000));
  Temp = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * Temp * Temp ))* Temp );
  Temp = Temp - 273.15; // Convert Kelvin to Celcius
  return Temp;
}

byte read_data()
{
  byte i = 0;
  byte result = 0;
  for (i = 0; i < 8; i++) {
      while (digitalRead(DHpin) == LOW); // wait 50us
      delayMicroseconds(30); //The duration of the high level is judged to determine whether the data is '0' or '1'
      if (digitalRead(DHpin) == HIGH)
        result |= (1 << (8 - i)); //High in the former, low in the post
    while (digitalRead(DHpin) == HIGH); //Data '1', waiting for the next bit of reception
    }
  return result;
}

void start_test()
{
  digitalWrite(DHpin, LOW); //Pull down the bus to send the start signal
  delay(30); //The delay is greater than 18 ms so that DHT 11 can detect the start signal
  digitalWrite(DHpin, HIGH);
  delayMicroseconds(40); //Wait for DHT11 to respond
  pinMode(DHpin, INPUT);
  while(digitalRead(DHpin) == HIGH);
  delayMicroseconds(80); //The DHT11 responds by pulling the bus low for 80us;
  if(digitalRead(DHpin) == LOW)
    delayMicroseconds(80); //DHT11 pulled up after the bus 80us to start sending data;
  for(int i = 0; i < 5; i++) //Receiving temperature and humidity data, check bits are not considered;
    dat[i] = read_data();
  pinMode(DHpin, OUTPUT);
  digitalWrite(DHpin, HIGH); //After the completion of a release of data bus, waiting for the host to start the next signal
}
