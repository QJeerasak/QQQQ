#include <SoftwareSerial.h>
#define RxD 2
#define TxD 3

/*#include <Wire.h>
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x3F, 16, 2);*/

SoftwareSerial mySerial(RxD,TxD); // RX, TX

/* KY-013 ANALOG TEMPERATURE SENSOR MODULE */
/*double Thermister(int RawADC) {
  double Temp;
  Temp = log(((10240000/RawADC) - 10000));
  Temp = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * Temp * Temp ))* Temp );
  Temp = Temp - 273.15; // Convert Kelvin to Celcius
  return Temp;
}
*/
/* -------------------------------------------*/

String SerialGET = "";

void setup() {
    Serial.begin(9600);
    pinMode(RxD, INPUT);
    pinMode(TxD, OUTPUT);
    mySerial.begin(9600);
    lcd.begin();
   
}
 
void loop() {

  /* KY-013 ANALOG TEMPERATURE SENSOR MODULE */
  /* Serial.print(Thermister(analogRead(0))); //read pin A0
   Serial.println("c");
   mySerial.print(Thermister(analogRead(0)));
   mySerial.println("c");
   delay(500);*/
 /*---------------------------------------------*/

  
    while (mySerial.available()) {                   //ฝั่งรับ    
        char incoming  = mySerial.read();
        SerialGET += incoming;
        if (incoming == '\n'){
          SerialGET.trim();             //ตัดช่องว่างข้างหลังออก
          Serial.print("รับค่า :");
          Serial.println(SerialGET);
          if (SerialGET.substring(0,1) == "1"){  // ส่งจาก node 1
            if(SerialGET.substring(1,2) == "2"){ // หา node 2
              Serial.println("ทำงาน");
              SerialGET = "";
              }else {
              delay(3000);
              SerialGET.setCharAt(0,'2');
              mySerial.print(SerialGET); //ทำไมไม่ส่งข้อมูล ??
              Serial.print("ทำการส่งต่อแล้ว :");
              Serial.println(SerialGET);
              SerialGET = "";
              }
          }
SerialGET = "";
        }
        }
    if (Serial.available()){
        char incoming2 = Serial.read();
        mySerial.print(incoming2);
        
        }    


}
