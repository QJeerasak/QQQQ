#include <SoftwareSerial.h>
#define RxD 2
#define TxD 3
SoftwareSerial mySerial(RxD,TxD); // RX, TX
String SerialGET = "";
String GetToR4 = "";
unsigned long previousMillis=0;
float interval=6000;
int val = 0; //value for storing moisture value 
int soilPin = A0;//Declare a variable for the soil moisture sensor 
int soilPower = 7;//Variable for Soil moisture Power

void setup() {
  Serial.begin(9600);
  pinMode(RxD, INPUT);
  pinMode(TxD, OUTPUT);
  mySerial.begin(9600);
  pinMode(soilPower, OUTPUT);//Set D7 as an OUTPUT
  digitalWrite(soilPower, LOW);//Set to LOW so no power is flowing through the sensor
}
void loop() {
  unsigned long currentMillis = millis();
  if((unsigned long)(currentMillis - previousMillis) >= interval) { 
    int soil = readSoil();
    String convert = String(soil);
    int count_convert = convert.length();
    //String massage = String("3" + count_convert + '_' + soil);
    mySerial.print("3");
    mySerial.print(count_convert);
    mySerial.print("_");
    mySerial.print(soil);
    mySerial.print(' ');
    mySerial.print(GetToR4);
    mySerial.print('\n');
    GetToR4 = "";
    previousMillis = currentMillis;
    }
  if  (mySerial.available()) {  
    char incoming  = mySerial.read();
    SerialGET += incoming;
    if(incoming == '\n'){
      if(SerialGET.substring(0,1) == "4"){
        SerialGET.trim();   
        GetToR4 = SerialGET;
        Serial.print("GET : ");
        Serial.print(GetToR4);
        Serial.println();
        
      }
      SerialGET = "";
    }
  }
  

}

void software_Reset() // Restarts program from beginning but does not reset the peripherals and registers
{
asm volatile ("  jmp 0");  
}
int readSoil()
{
    digitalWrite(soilPower, HIGH);//turn D7 "On"
    delay(10);//wait 10 milliseconds 
    val = analogRead(soilPin);//Read the SIG value form sensor 
    digitalWrite(soilPower, LOW);//turn D7 "Off"
    return val;//send current moisture value
}
